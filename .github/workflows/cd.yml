name: Deploy

on:
  push:
    branches:
      - main
  release:
    types:
      - published
  workflow_dispatch:
    inputs:
      rollback:
        description: 'Set to true to rollback to the previous deployment'
        required: false
        default: 'false'
      deploy:
        description: 'Set to true to deploy the current version'
        required: false
        default: 'false'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'

      - name: Install yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn install || { cat ~/.npm/_logs/*-debug.log; exit 1; }


      - name: Lint code
        run: yarn run lint

      - name: Build application
        run: npm run build
        

      - name: Tag the version
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          custom_tag: 'v1.0.0'  # You can use dynamic versioning if needed
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: Release of version ${{ steps.tag_version.outputs.new_tag }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}

  rollback:
    runs-on: ubuntu-latest
    if: github.event.inputs.rollback == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Rollback to previous version
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST "
          cd /path/to/your/project &&
          git checkout $(cat ~/.last_deploy_version) &&
          npm install &&
          npm run build &&
          pm2 restart all"
